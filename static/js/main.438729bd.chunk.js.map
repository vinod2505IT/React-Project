{"version":3,"sources":["ListItem.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteitem","duration","easing","library","add","faTrash","App","state","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","console","log","newItems","filterdItem","filter","onSubmit","placeholder","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTA6BeA,MAxBf,SAAmBC,GACf,IACMD,EADQC,EAAMC,MACIC,KAAI,SAAAC,GACxB,OAAO,qBAAKC,UAAU,OAAf,SACH,8BACI,uBAAOC,KAAK,OAAOC,GAAIH,EAAKI,IAAKC,MAAOL,EAAKM,KAC7CC,SAAU,SAACC,GACPX,EAAMY,UAAUD,EAAEE,OAAOL,MAAML,EAAKI,QAE5C,+BACI,cAAC,IAAD,CAAiBH,UAAU,UAAUU,KAAK,QAC1CC,QAAW,kBAAIf,EAAMgB,WAAWb,EAAKI,cARXJ,EAAKI,QAa3C,OACG,8BACI,cAAC,IAAD,CAAUU,SAAU,IAAKC,OAAO,cAAhC,SACCnB,O,eCjBZoB,IAAQC,IAAIC,K,IAkFGC,E,kDAhFb,WAAYtB,GAAO,IAAD,8BAChB,cAAMA,IACDuB,MAAQ,CACXtB,MAAM,GACNuB,YAAY,CACVf,KAAK,GACLF,IAAI,KAIR,EAAKkB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKV,WAAa,EAAKA,WAAWU,KAAhB,gBAClB,EAAKd,UAAY,EAAKA,UAAUc,KAAf,gBAbD,E,+CAkBlB,SAAYf,GACViB,KAAKC,SAAS,CACZL,YAAY,CACVf,KAAKE,EAAEE,OAAOL,MACdD,IAAIuB,KAAKC,W,qBAIf,SAAQpB,GACNA,EAAEqB,iBACF,IAAMC,EAAUL,KAAKL,MAAMC,YAE3B,GADAU,QAAQC,IAAIF,GACM,KAAfA,EAAQxB,KAAU,CACnB,IAAM2B,EAAQ,sBAAOR,KAAKL,MAAMtB,OAAlB,CAAyBgC,IACvCL,KAAKC,SAAS,CACZ5B,MAAMmC,EACNZ,YAAY,CACVf,KAAK,GACLF,IAAI,S,wBAOZ,SAAWA,GACT,IAAM8B,EAAcT,KAAKL,MAAMtB,MAAMqC,QAAO,SAAAnC,GAAI,OAAIA,EAAKI,MAAMA,KAC/DqB,KAAKC,SAAS,CACZ5B,MAAMoC,M,uBAGV,SAAU5B,EAAKF,GACb,IAAMN,EAAQ2B,KAAKL,MAAMtB,MAEzBA,EAAMC,KAAI,SAAAC,GACLA,EAAKI,MAAQA,IACdJ,EAAKM,KAAOA,MAGhBmB,KAAKC,SAAS,CACZ5B,MAAMA,M,oBAGV,WACG,OACE,sBAAKG,UAAU,MAAf,UACC,iCACI,uBAAME,GAAG,aAAaiC,SAAUX,KAAKD,QAArC,UACE,uBAAOtB,KAAK,OAAOmC,YAAY,gBAC/BhC,MAAOoB,KAAKL,MAAMC,YAAYf,KAC9BC,SAAUkB,KAAKH,cACf,wBAAQpB,KAAK,SAAb,sBAGF,cAAC,EAAD,CAAUJ,MAAQ2B,KAAKL,MAAMtB,MAC7Be,WAAcY,KAAKZ,WACnBJ,UAAagB,KAAKhB,mB,GA3EZ6B,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.438729bd.chunk.js","sourcesContent":["import  React from 'react';\r\nimport \"./ListItem.css\";\r\nimport {FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction ListItems(props){\r\n    const items = props.items;\r\n    const ListItems = items.map(item => {\r\n        return <div className=\"list\" key={item.key}>\r\n            <p>\r\n                <input type=\"text\" id={item.key} value={item.text}\r\n                onChange={(e) => {\r\n                    props.setUpdate(e.target.value,item.key)\r\n                }}></input>\r\n            <span>\r\n                <FontAwesomeIcon className=\"faicons\" icon=\"trash\"\r\n                onClick = {()=>props.deleteitem(item.key)}/>\r\n            </span></p>\r\n            \r\n        </div>\r\n    })\r\n    return(\r\n       <div>\r\n           <FlipMove duration={300} easing=\"ease-in-out\">\r\n           {ListItems}\r\n           </FlipMove>\r\n           </div>\r\n    )\r\n}\r\nexport default ListItems;","import React, { Component } from 'react';\nimport './App.css';\nimport ListItem from \"./ListItem\";\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {faTrash} from '@fortawesome/free-solid-svg-icons';\n\n\nlibrary.add(faTrash);\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      items:[],\n      currentItem:{\n        text:\"\",\n        key:\"\"\n      }\n    }\n    //this keyword does not point to the class directly so we need to bind explictly\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.deleteitem = this.deleteitem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n\n\n\n  }\n  handleInput(e){\n    this.setState({\n      currentItem:{\n        text:e.target.value,\n        key:Date.now()\n      }\n    })\n  }\n  addItem(e){\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    console.log(newItem);\n    if(newItem.text!==\"\"){\n      const newItems = [...this.state.items, newItem];\n      this.setState({\n        items:newItems,\n        currentItem:{\n          text:\"\",\n          key:\"\"\n        }\n      })\n      \n    }\n\n  }\n  deleteitem(key){\n    const filterdItem = this.state.items.filter(item => item.key!==key);\n    this.setState({\n      items:filterdItem\n    })\n  }\n  setUpdate(text,key){\n    const items = this.state.items;\n    // eslint-disable-next-line array-callback-return\n    items.map(item => {\n      if(item.key === key){\n        item.text = text;\n      }\n    })\n    this.setState({\n      items:items\n    })\n  }\n  render(){\n     return(\n       <div className=\"App\">\n        <header>\n            <form id=\"to-do-form\" onSubmit={this.addItem}>\n              <input type=\"text\" placeholder=\"Enter a  text\"\n              value={this.state.currentItem.text}\n              onChange={this.handleInput}/>\n              <button type=\"submit\">Add</button>\n            </form>\n        </header>\n            <ListItem items ={this.state.items} \n            deleteitem = {this.deleteitem}\n            setUpdate = {this.setUpdate}></ListItem>\n       </div>\n     );\n  };\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}